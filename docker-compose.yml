version: '3'

volumes:
  dbs-data:
  log-data:
  resource-data:

services:
  base:
    build:
      context: ./dc3/dependences/base/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-base:3.0

  volume:
    image: pnoker/dc3-volume:3.0
    container_name: dc3-volume
    networks:
      network:
        aliases:
          - dc3-volume
    volumes:
      - dbs-data:/iotdc3/data/dbs
      - log-data:/iotdc3/data/logs
      - resource-data:/iotdc3/data/resources

  influxdb:
    build:
      context: ./dc3/dependences/influxdb/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-influxdb:3.0
    restart: always
    ports:
      - 8086:8086
    container_name: dc3-influxdb
    hostname: iotdc3.influxdb
    networks:
      network:
        aliases:
          - dc3-influxdb

  mariadb:
    build:
      context: ./dc3/dependences/mariadb/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-mariadb:3.0
    restart: always
    ports:
      - 3306:3306
    container_name: dc3-mariadb
    hostname: iotdc3.mariadb
    networks:
      network:
        aliases:
          - dc3-mariadb

  mongodb:
    build:
      context: ./dc3/dependences/mongodb/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-mongodb:3.0
    restart: always
    ports:
      - 27017:27017
    container_name: dc3-mongodb
    hostname: iotdc3.mongodb
    networks:
      network:
        aliases:
          - dc3-mongodb

  redis:
    build:
      context: ./dc3/dependences/redis/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-redis:3.0
    restart: always
    ports:
      - 6379:6379
    container_name: dc3-redis
    hostname: iotdc3.redis
    networks:
      network:
        aliases:
          - dc3-redis

  rabbitmq:
    build:
      context: ./dc3/dependences/rabbitmq/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-rabbitmq:3.0
    restart: always
    ports:
      - 5672:5672
      - 1883:1883
      - 61613:61613
      - 15672:15672
    container_name: dc3-rabbitmq
    hostname: iotdc3.rabbitmq
    networks:
      network:
        aliases:
          - dc3-rabbitmq

  nginx:
    build:
      context: ./dc3/dependences/nginx/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-nginx:3.0
    restart: always
    ports:
      - 80:80
      - 1935:1935
    container_name: dc3-nginx
    hostname: iotdc3.nginx
    networks:
      network:
        aliases:
          - dc3-nginx

  gateway:
    build:
      context: ./dc3-gateway/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-gateway:3.0
    restart: always
    ports:
      - 8000:8000
    links:
      - register:iotdc3.register
      - monitor:iotdc3.monitor
      - redis:iotdc3.redis
    container_name: dc3-gateway
    hostname: iotdc3.gateway
    networks:
      network:
        aliases:
          - dc3-gateway

  oauth:
    build:
      context: ./dc3-center/dc3-oauth/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-oauth:3.0
    restart: always
    ports:
      - 8400:8400
    links:
      - register:iotdc3.register
    container_name: dc3-oauth
    hostname: iotdc3.oauth
    networks:
      network:
        aliases:
          - dc3-oauth

  register:
    build:
      context: ./dc3-center/dc3-register/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-register:3.0
    restart: always
    ports:
      - 8100:8100
    container_name: dc3-register
    hostname: iotdc3.register
    networks:
      network:
        aliases:
          - dc3-register

  monitor:
    build:
      context: ./dc3-center/dc3-monitor/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-monitor:3.0
    restart: always
    ports:
      - 8200:8200
    links:
      - register:iotdc3.register
    container_name: dc3-monitor
    hostname: iotdc3.monitor
    networks:
      network:
        aliases:
          - dc3-monitor

  dbs:
    build:
      context: ./dc3-center/dc3-dbs/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-dbs:3.0
    restart: always
    ports:
      - 8300:8300
    links:
      - register:iotdc3.register
      - mongodb:iotdc3.mongodb
      - mariadb:iotdc3.mariadb
      - redis:iotdc3.redis
    container_name: dc3-dbs
    hostname: iotdc3.dbs
    networks:
      network:
        aliases:
          - dc3-dbs

  manager:
    build:
      context: ./dc3-device/dc3-manager/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-manager:3.0
    restart: always
    ports:
      - 8600:8600
    links:
      - register:iotdc3.register
    container_name: dc3-manager
    hostname: iotdc3.manager
    networks:
      network:
        aliases:
          - dc3-manager

  opc:
    build:
      context: ./dc3-transfer/dc3-opc/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-opc:3.0
    restart: always
    ports:
      - 8801:8801
    links:
      - register:iotdc3.register
    container_name: dc3-opc
    hostname: iotdc3.opc
    networks:
      network:
        aliases:
          - dc3-opc

  opcua:
    build:
      context: ./dc3-transfer/dc3-opc-ua/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-opc-ua:3.0
    restart: always
    ports:
      - 8802:8802
    links:
      - register:iotdc3.register
    container_name: dc3-opc-ua
    hostname: iotdc3.opcua
    networks:
      network:
        aliases:
          - dc3-opcua

  rtmp:
    build:
      context: ./dc3-transfer/dc3-rtmp/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-rtmp:3.0
    restart: always
    ports:
      - 8803:8803
    links:
      - register:iotdc3.register
      - dbs:iotdc3.dbs
    container_name: dc3-rtmp
    hostname: iotdc3.rtmp
    networks:
      network:
        aliases:
          - dc3-rtmp

  resource:
    build:
      context: ./dc3-transfer/dc3-resource/
      dockerfile: ./Dockerfile
    image: pnoker/dc3-resource:3.0
    restart: always
    ports:
      - 8800:8800
    links:
      - register:iotdc3.register
    container_name: dc3-resource
    hostname: iotdc3.resource
    networks:
      network:
        aliases:
          - dc3-resource

  portainer:
    image:  portainer/portainer
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    networks:
      network:
        aliases:
          - dc3-portainer

networks:
  network:
    driver: 'bridge'
...