<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.pnoker</groupId>
    <artifactId>iot-dc3</artifactId>
    <version>3.0</version>
    <packaging>pom</packaging>

    <name>iot-dc3</name>
    <url>https://github.com/pnoker/iot-dc3</url>
    <inceptionYear>2018</inceptionYear>
    <description>可分布式的物联网(IOT)平台 IOT-DC3, 基于开源Spring Cloud框架搭建，实现设备互联、管理、代码生成和快速开发，兼容多种流行的物联网协议。</description>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>pnoker</name>
            <email>pnokers@icloud.com</email>
            <organization>pnoker.github.io</organization>
        </developer>
    </developers>

    <!-- Spring Boot Starter Parent -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
    </parent>

    <!-- Multiple Module -->
    <modules>

        <module>dc3-gateway</module>
        <module>dc3-center</module>
        <module>dc3-web</module>
        
        <module>dc3-transfer</module>
        <module>dc3-collect</module>
        <module>dc3-device</module>

        <module>dc3-api</module>
        <module>dc3-common</module>

    </modules>

    <!-- Properties -->
    <properties>

        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <commons.cli.version>1.4</commons.cli.version>
        <commons.lang3.version>3.9</commons.lang3.version>
        <spring-cloud.version>Greenwich.RELEASE</spring-cloud.version>

        <lombok.version>1.18.8</lombok.version>
        <fastjson.version>1.2.58</fastjson.version>
        <google.guava.version>27.1-jre</google.guava.version>

    </properties>

    <!--通过dependencyManagement元素来管理jar包的版本，让子项目中引用一个依赖而不用显示的列出版本号。
        Maven会沿着父子层次向上走，直到找到一个拥有dependencyManagement元素的项目，
        然后它就会使用在这个dependencyManagement元素中指定的版本号-->
    <dependencyManagement>
        <dependencies>

            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- dc3 Api -->
            <dependency>
                <groupId>com.pnoker.api</groupId>
                <artifactId>dc3-api</artifactId>
                <version>3.0</version>
                <scope>compile</scope>
            </dependency>

            <!-- dc3 Common -->
            <dependency>
                <groupId>com.pnoker.common</groupId>
                <artifactId>dc3-common</artifactId>
                <version>3.0</version>
                <scope>compile</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 相对于dependencyManagement，所有生命在dependencies里的依赖都会自动引入，
         并默认被所有的子项目继承 -->
    <dependencies>

        <!-- Spring Boot Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- FastJson 工具包 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>${fastjson.version}</version>
        </dependency>

        <!-- Google Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${google.guava.version}</version>
        </dependency>

        <!-- Lombok 代码简化 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

</project>
